openapi: 3.0.3
info:
  title: Asana Plugin
  description: A plugin that allows the user to interact with Asana using ChatGPT.
  termsOfService: https://asana.com/terms
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://app.asana.com/api/1.0
paths:
  /users/{user_gid}:
    get:
      tags:
        - Users
      summary: Get a user
      description: >-
        Returns the full user record for the single user with the provided ID.
      operationId: getUser
      parameters:
        - name: user_gid
          in: path
          description: >-
            A string identifying a user. This can either be the string "me", an email,
            or the gid of a user.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns the user specified.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/UserResponse"
  /workspaces/{workspace_gid}/typeahead:
    get:
      summary: Get objects via typeahead
      description: |-
        Retrieves objects in the workspace based via an auto-completion/typeahead
        search algorithm.
      tags:
        - Typeahead
      operationId: typeaheadForWorkspace
      parameters:
        - name: workspace_gid
          in: path
          description: >-
            Globally unique identifier for the workspace or organization.
          required: true
          schema:
            type: string
          example: "12345"
        - name: resource_type
          in: query
          description: >-
            The type of values the typeahead should return. You can choose from one
            of the following: `custom_field`, `project`, `project_template`,
            `portfolio`, `tag`, `task`, and `user`.
          required: true
          schema:
            type: string
            enum:
              - custom_field
              - project
              - project_template
              - portfolio
              - tag
              - task
              - user
            default: user
        - name: type
          in: query
          description: >-
            *Deprecated: new integrations should prefer the resource_type field.*
          required: false
          schema:
            type: string
            enum:
              - custom_field
              - portfolio
              - project
              - tag
              - task
              - user
            default: user
        - name: query
          in: query
          description: >-
            The string that will be used to search for relevant objects. If an
            empty string is passed in, the API will return results.
          schema:
            type: string
          example: Greg
        - name: count
          in: query
          description: >-
            The number of results to return. The default is 20 if this parameter is
            omitted, with a minimum of 1 and a maximum of 100. If there are fewer
            results found than requested, all will be returned.
          schema:
            type: integer
          example: 20
      responses:
        "200":
          description: >-
            Successfully retrieved objects via a typeahead search algorithm.
          content:
            application/json:
              schema:
                type: object
                description: >-
                  A generic list of objects, such as those returned by the typeahead
                  search
                  endpoint.
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the resource, as a string.
                          type: string
                          readOnly: true
                          example: "12345"
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: task
                        name:
                          description: The name of the object.
                          type: string
                          example: Bug Task
components:
  schemas:
    UserResponse:
      type: object
      properties:
        gid:
          description: Globally unique identifier of the resource, as a string.
          type: string
          readOnly: true
          example: "12345"
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: user
        name:
          type: string
          description: >-
            *Read-only except when same user as requester*. The user’s name.
          example: Greg Sanchez
        email:
          type: string
          format: email
          readOnly: true
          description: The user's email address.
          example: gsanchez@example.com
        photo:
          type: object
          nullable: true
          properties:
            image_21x21:
              type: string
              format: uri
              example: https://...
            image_27x27:
              type: string
              format: uri
              example: https://...
            image_36x36:
              type: string
              format: uri
              example: https://...
            image_60x60:
              type: string
              format: uri
              example: https://...
            image_128x128:
              type: string
              format: uri
              example: https://...
            image_1024x1024:
              type: string
              format: uri
              example: https://...
          readOnly: true
          description: >-
            A map of the user’s profile photo in various sizes, or null if no
            photo is set. Sizes provided are 21, 27, 36, 60, 128, and 1024. All
            images are in PNG format, except for 1024 (which is in JPEG format).
          example:
            image_21x21: https://...
            image_27x27: https://...
            image_36x36: https://...
            image_60x60: https://...
            image_128x128: https://...
            image_1024x1024: https://...
        workspaces:
          description: |-
            Workspaces and organizations this user may access.

            Note: The API will only return workspaces and organizations that
            also contain the authenticated user.
          readOnly: true
          type: array
          items:
            type: object
            properties:
              gid:
                description: Globally unique identifier of the resource, as a string.
                type: string
                readOnly: true
                example: "12345"
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: task
              name:
                description: The name of the workspace.
                type: string
                example: My Company Workspace
  securitySchemes:
    personal_access_token:
      type: http
      description: >-
        A personal access token allows access to the api for the user who
        created it. This should be kept a secret and be treated like a
        password.
      scheme: bearer
    oauth2:
      type: oauth2
      description: >-
        We require that applications designed to access the Asana API on behalf
        of multiple users implement OAuth 2.0.
        Asana supports the Authorization Code Grant flow.
      flows:
        authorizationCode:
          authorizationUrl: https://app.asana.com/-/oauth_authorize
          tokenUrl: https://app.asana.com/-/oauth_token
          refreshUrl: https://app.asana.com/-/oauth_token
          scopes:
            default: >-
              Provides access to all endpoints documented in our API reference.
              If no scopes are requested, this scope is assumed by default.
            openid: >-
              Provides access to OpenID Connect ID tokens and the OpenID Connect
              user info endpoint.
            email: >-
              Provides access to the user’s email through the OpenID Connect
              user info endpoint.
            profile: >-
              Provides access to the user’s name and profile photo through the
              OpenID Connect user info endpoint.
security:
  - personal_access_token: []
  - oauth2: []
tags:
  - name: Typeahead
    description: >-
      The typeahead search API provides search for objects from a single
      workspace.
  - name: Users
    description: >-
      A user object represents an account in Asana that can be given access to
      various workspaces, projects, and tasks.
externalDocs:
  description: API Reference
  url: https://developers.asana.com/reference
